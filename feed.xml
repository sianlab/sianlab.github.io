<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="https://sianlab.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://sianlab.github.io/" rel="alternate" type="text/html" /><updated>2022-06-07T18:09:07+09:00</updated><id>https://sianlab.github.io/feed.xml</id><title type="html">Siansoft</title><subtitle>기술 블로그</subtitle><entry><title type="html">Apache Ignite 살펴보기</title><link href="https://sianlab.github.io/apache-ignite-overview" rel="alternate" type="text/html" title="Apache Ignite 살펴보기" /><published>2022-06-07T00:00:00+09:00</published><updated>2022-06-07T00:00:00+09:00</updated><id>https://sianlab.github.io/apache-ignite-overview</id><content type="html" xml:base="https://sianlab.github.io/apache-ignite-overview"><![CDATA[<p>아파치 재단에서 Apache Ignite라는 분산형 데이터베이스 서비스를 출시했다. 메모리와 저장장치 간 데이터를 분산하여 속도, 안정성 모두 고려하여 개발된 데이터베이스로 보인다. 사이트에 접속해보면 여러가지 기술들이 나열되어 있는데 이론적인 이야기는 일단 제쳐두고 간단하게 메모리 DB로 사용해 본 내용을 본 포스트에 기재한다.</p>

<p>만약 지원하는 기술 및 각종 가이드가 궁금한 사람은 아래 사이트에 접속해서 확인해보면 된다.</p>

<p><a href="https://ignite.apache.org" title="Apache Ignite 페이지">Apache Ignite 페이지</a></p>

<h1 id="apache-ignite-설치-및-서버-실행">Apache Ignite 설치 및 서버 실행</h1>

<p>Apache Ignite를 사용하기 위해선 먼저 사이트에 접속하여 다운로드 페이지에서 Ignite를 다운로드 받아야 한다.</p>

<p><a href="https://ignite.apache.org/download.cgi#binaries" title="Apache Ignite 다운로드 페이지">Apache Ignite 다운로드 페이지</a></p>

<p>위 사이트에 접속하여 원하는 버전을 다운로드 받는다. 필자는 포스트 작성 당시 latest 버전인 2.13.0를 받았다.</p>

<p><img src="\assets\built\images\apache-ignite\apache-ignite-overview\img1.png" alt="" /></p>

<p>다운로드 받은 zip 파일을 압축해제한 뒤, 해당 폴더를 명령 프롬프트로 진입한다. (윈도우에서 진행했기 때문에 cmd를 이용하였다.)</p>

<p><img src="\assets\built\images\apache-ignite\apache-ignite-overview\img2.png" alt="" /></p>

<p>bin 폴더 내부에 진입했다면 아래 명령어를 실행해주자. Windows와 Unix 간 명령어가 다른 것에 주의. (bat, sh)</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">#</span><span class="w"> </span>Windows
<span class="go">ignite.bat ..\examples\config\example-ignite.xml

</span><span class="gp">#</span><span class="w"> </span>Unix
<span class="go">./ignite.sh ../examples/config/example-ignite.xml
</span></code></pre></div></div>

<p>아래 이미지와 같이 서버가 구동되는지 확인한다.</p>

<p><img src="\assets\built\images\apache-ignite\apache-ignite-overview\img3.png" alt="" /></p>

<blockquote>
  <p>java는 1.8_301 버전을 이용</p>

  <p>openjdk 1.8 버전에서 에러가 발생하여 추후 알아볼 예정</p>
</blockquote>

<h2 id="java-client를-이용하여-기본-구현">Java client를 이용하여 기본 구현</h2>

<p>평소에 사용하던 언어인 Java를 이용하여 기본 메모리 DB에 read, write를 하는 클라이언트를 작성하였다. Ignite 사이트에 각종 다른 언어 매뉴얼이 있으니 다른 언어는 사이트의 가이드에서 확인할 수 있다.</p>

<p>우선 첫번째로 maven project를 생성하여 pom.xml에 ignite 의존성을 추가한다.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;properties&gt;</span>
	<span class="nt">&lt;ignite.version&gt;</span>2.13.0<span class="nt">&lt;/ignite.version&gt;</span>
<span class="nt">&lt;/properties&gt;</span>

<span class="nt">&lt;dependencies&gt;</span>
	<span class="nt">&lt;dependency&gt;</span>
		<span class="nt">&lt;groupId&gt;</span>org.apache.ignite<span class="nt">&lt;/groupId&gt;</span>
		<span class="nt">&lt;artifactId&gt;</span>ignite-core<span class="nt">&lt;/artifactId&gt;</span>
		<span class="nt">&lt;version&gt;</span>${ignite.version}<span class="nt">&lt;/version&gt;</span>
	<span class="nt">&lt;/dependency&gt;</span>
	<span class="nt">&lt;dependency&gt;</span>
		<span class="nt">&lt;groupId&gt;</span>org.apache.ignite<span class="nt">&lt;/groupId&gt;</span>
		<span class="nt">&lt;artifactId&gt;</span>ignite-spring<span class="nt">&lt;/artifactId&gt;</span>
		<span class="nt">&lt;version&gt;</span>${ignite.version}<span class="nt">&lt;/version&gt;</span>
	<span class="nt">&lt;/dependency&gt;</span>
<span class="nt">&lt;/dependencies&gt;</span>
</code></pre></div></div>

<p>그 후 Java 코드를 작성한다. Ignite에서 제공하는 기본 코드다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">main</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.apache.ignite.Ignite</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.IgniteCache</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.Ignition</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.configuration.IgniteConfiguration</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.lang.IgniteRunnable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.resources.IgniteInstanceResource</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.spi.discovery.tcp.ipfinder.multicast.TcpDiscoveryMulticastIpFinder</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">IgniteTest</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// Preparing IgniteConfiguration using Java APIs</span>
        <span class="nc">IgniteConfiguration</span> <span class="n">cfg</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">IgniteConfiguration</span><span class="o">();</span>

        <span class="c1">// The node will be started as a client node.</span>
        <span class="n">cfg</span><span class="o">.</span><span class="na">setClientMode</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>

        <span class="c1">// Classes of custom Java logic will be transferred over the wire from this app.</span>
        <span class="n">cfg</span><span class="o">.</span><span class="na">setPeerClassLoadingEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>

        <span class="c1">// Setting up an IP Finder to ensure the client can locate the servers.</span>
        <span class="nc">TcpDiscoveryMulticastIpFinder</span> <span class="n">ipFinder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">TcpDiscoveryMulticastIpFinder</span><span class="o">();</span>
        <span class="n">ipFinder</span><span class="o">.</span><span class="na">setAddresses</span><span class="o">(</span><span class="nc">Collections</span><span class="o">.</span><span class="na">singletonList</span><span class="o">(</span><span class="s">"127.0.0.1:47500..47509"</span><span class="o">));</span>
        <span class="n">cfg</span><span class="o">.</span><span class="na">setDiscoverySpi</span><span class="o">(</span><span class="k">new</span> <span class="nc">TcpDiscoverySpi</span><span class="o">().</span><span class="na">setIpFinder</span><span class="o">(</span><span class="n">ipFinder</span><span class="o">));</span>

        <span class="c1">// Starting the node</span>
        <span class="nc">Ignite</span> <span class="n">ignite</span> <span class="o">=</span> <span class="nc">Ignition</span><span class="o">.</span><span class="na">start</span><span class="o">(</span><span class="n">cfg</span><span class="o">);</span>

        <span class="c1">// Create an IgniteCache and put some values in it.</span>
        <span class="nc">IgniteCache</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="n">cache</span> <span class="o">=</span> <span class="n">ignite</span><span class="o">.</span><span class="na">getOrCreateCache</span><span class="o">(</span><span class="s">"myCache"</span><span class="o">);</span>
        <span class="n">cache</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="s">"Hello"</span><span class="o">);</span>
        <span class="n">cache</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="s">"World!"</span><span class="o">);</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&gt;&gt; Created the cache and add the values."</span><span class="o">);</span>

        <span class="c1">// Executing custom Java compute task on server nodes.</span>
        <span class="n">ignite</span><span class="o">.</span><span class="na">compute</span><span class="o">(</span><span class="n">ignite</span><span class="o">.</span><span class="na">cluster</span><span class="o">().</span><span class="na">forServers</span><span class="o">()).</span><span class="na">broadcast</span><span class="o">(</span><span class="k">new</span> <span class="nc">RemoteTask</span><span class="o">());</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&gt;&gt; Compute task is executed, check for output on the server nodes."</span><span class="o">);</span>

        <span class="c1">// Disconnect from the cluster.</span>
        <span class="n">ignite</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
	<span class="o">}</span>
	
	<span class="cm">/**
     * A compute tasks that prints out a node ID and some details about its OS and JRE.
     * Plus, the code shows how to access data stored in a cache from the compute task.
     */</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">RemoteTask</span> <span class="kd">implements</span> <span class="nc">IgniteRunnable</span> <span class="o">{</span>
        <span class="nd">@IgniteInstanceResource</span>
        <span class="nc">Ignite</span> <span class="n">ignite</span><span class="o">;</span>

        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&gt;&gt; Executing the compute task"</span><span class="o">);</span>

            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span>
                <span class="s">"   Node ID: "</span> <span class="o">+</span> <span class="n">ignite</span><span class="o">.</span><span class="na">cluster</span><span class="o">().</span><span class="na">localNode</span><span class="o">().</span><span class="na">id</span><span class="o">()</span> <span class="o">+</span> <span class="s">"\n"</span> <span class="o">+</span>
                <span class="s">"   OS: "</span> <span class="o">+</span> <span class="nc">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">"os.name"</span><span class="o">)</span> <span class="o">+</span>
                <span class="s">"   JRE: "</span> <span class="o">+</span> <span class="nc">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">"java.runtime.name"</span><span class="o">));</span>

            <span class="nc">IgniteCache</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="n">cache</span> <span class="o">=</span> <span class="n">ignite</span><span class="o">.</span><span class="na">cache</span><span class="o">(</span><span class="s">"myCache"</span><span class="o">);</span>

            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&gt;&gt; "</span> <span class="o">+</span> <span class="n">cache</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">cache</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">));</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>Ignite 가이드에서 제공하는 Java 코드는 기본 cache를 하나 만든 뒤, 해당 cache에 데이터 2개를 저장한 후, 서버에서 해당 데이터를 출력하는 task를 보내는 방식으로 작성되어 있다. 위 코드를 작성한 뒤 코드를 실행해보면 아래와 같이 Java 콘솔이 출력된다.</p>

<p><img src="\assets\built\images\apache-ignite\apache-ignite-overview\img4.png" alt="" /></p>

<p>클라이언트에서 작성한대로, 서버에 task를 execute했으니 서버 콘솔을 확인해보라는 메시지가 나온다면 성공이다. 이제 Ignite 서버 콘솔을 확인한다.</p>

<p><img src="\assets\built\images\apache-ignite\apache-ignite-overview\img5.png" alt="" /></p>

<p>task에 작성한대로 콘솔에 데이터가 출력되는 모습이 확인된다. 서버의 cache에 데이터가 잘 저장되었다.</p>

<p>다음은 클라이언트에서 값을 저장하고, 서버에서 확인하는 것이 아니라 클라이언트에서 값을 확인해보는 코드를 작성하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">main</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.apache.ignite.Ignite</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.IgniteCache</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.Ignition</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.configuration.IgniteConfiguration</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.spi.discovery.tcp.ipfinder.multicast.TcpDiscoveryMulticastIpFinder</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">IgniteTest</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// Preparing IgniteConfiguration using Java APIs</span>
        <span class="nc">IgniteConfiguration</span> <span class="n">cfg</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">IgniteConfiguration</span><span class="o">();</span>

        <span class="c1">// The node will be started as a client node.</span>
        <span class="n">cfg</span><span class="o">.</span><span class="na">setClientMode</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>

        <span class="c1">// Classes of custom Java logic will be transferred over the wire from this app.</span>
        <span class="n">cfg</span><span class="o">.</span><span class="na">setPeerClassLoadingEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>

        <span class="c1">// Setting up an IP Finder to ensure the client can locate the servers.</span>
        <span class="nc">TcpDiscoveryMulticastIpFinder</span> <span class="n">ipFinder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">TcpDiscoveryMulticastIpFinder</span><span class="o">();</span>
        <span class="n">ipFinder</span><span class="o">.</span><span class="na">setAddresses</span><span class="o">(</span><span class="nc">Collections</span><span class="o">.</span><span class="na">singletonList</span><span class="o">(</span><span class="s">"127.0.0.1:47500..47509"</span><span class="o">));</span>
        <span class="n">cfg</span><span class="o">.</span><span class="na">setDiscoverySpi</span><span class="o">(</span><span class="k">new</span> <span class="nc">TcpDiscoverySpi</span><span class="o">().</span><span class="na">setIpFinder</span><span class="o">(</span><span class="n">ipFinder</span><span class="o">));</span>

        <span class="c1">// Starting the node</span>
        <span class="nc">Ignite</span> <span class="n">ignite</span> <span class="o">=</span> <span class="nc">Ignition</span><span class="o">.</span><span class="na">start</span><span class="o">(</span><span class="n">cfg</span><span class="o">);</span>

        <span class="c1">// Create an IgniteCache and put some values in it.</span>
        <span class="nc">IgniteCache</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="n">cache</span> <span class="o">=</span> <span class="n">ignite</span><span class="o">.</span><span class="na">getOrCreateCache</span><span class="o">(</span><span class="s">"myCache"</span><span class="o">);</span>
        <span class="n">cache</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="s">"Hello"</span><span class="o">);</span>
        <span class="n">cache</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="s">"World!"</span><span class="o">);</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&gt;&gt; Created the cache and add the values."</span><span class="o">);</span>
        
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&gt;&gt; value 1 : "</span> <span class="o">+</span> <span class="n">cache</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&gt;&gt; value 2 : "</span> <span class="o">+</span> <span class="n">cache</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">));</span>

        <span class="c1">// Disconnect from the cluster.</span>
        <span class="n">ignite</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>cache에서 키를 이용하여 get을 해주면 간단하게 클라이언트에서 데이터를 조회할 수 있다. 아래 콘솔을 확인하자.</p>

<p><img src="\assets\built\images\apache-ignite\apache-ignite-overview\img6.png" alt="" /></p>

<p>서버가 작동되고 있는 한, 데이터가 유지되야하기 때문에 다음은 서버에 값을 저장하지 않고 바로 조회하는 코드를 작성하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">main</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.apache.ignite.Ignite</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.IgniteCache</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.Ignition</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.configuration.IgniteConfiguration</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.apache.ignite.spi.discovery.tcp.ipfinder.multicast.TcpDiscoveryMulticastIpFinder</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">IgniteTest</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// Preparing IgniteConfiguration using Java APIs</span>
        <span class="nc">IgniteConfiguration</span> <span class="n">cfg</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">IgniteConfiguration</span><span class="o">();</span>

        <span class="c1">// The node will be started as a client node.</span>
        <span class="n">cfg</span><span class="o">.</span><span class="na">setClientMode</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>

        <span class="c1">// Classes of custom Java logic will be transferred over the wire from this app.</span>
        <span class="n">cfg</span><span class="o">.</span><span class="na">setPeerClassLoadingEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>

        <span class="c1">// Setting up an IP Finder to ensure the client can locate the servers.</span>
        <span class="nc">TcpDiscoveryMulticastIpFinder</span> <span class="n">ipFinder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">TcpDiscoveryMulticastIpFinder</span><span class="o">();</span>
        <span class="n">ipFinder</span><span class="o">.</span><span class="na">setAddresses</span><span class="o">(</span><span class="nc">Collections</span><span class="o">.</span><span class="na">singletonList</span><span class="o">(</span><span class="s">"127.0.0.1:47500..47509"</span><span class="o">));</span>
        <span class="n">cfg</span><span class="o">.</span><span class="na">setDiscoverySpi</span><span class="o">(</span><span class="k">new</span> <span class="nc">TcpDiscoverySpi</span><span class="o">().</span><span class="na">setIpFinder</span><span class="o">(</span><span class="n">ipFinder</span><span class="o">));</span>

        <span class="c1">// Starting the node</span>
        <span class="nc">Ignite</span> <span class="n">ignite</span> <span class="o">=</span> <span class="nc">Ignition</span><span class="o">.</span><span class="na">start</span><span class="o">(</span><span class="n">cfg</span><span class="o">);</span>

        <span class="c1">// Create an IgniteCache and put some values in it.</span>
        <span class="nc">IgniteCache</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="n">cache</span> <span class="o">=</span> <span class="n">ignite</span><span class="o">.</span><span class="na">getOrCreateCache</span><span class="o">(</span><span class="s">"myCache"</span><span class="o">);</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&gt;&gt; value 1 : "</span> <span class="o">+</span> <span class="n">cache</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&gt;&gt; value 2 : "</span> <span class="o">+</span> <span class="n">cache</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">));</span>

        <span class="c1">// Disconnect from the cluster.</span>
        <span class="n">ignite</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>콘솔을 확인해서 이전에 저장했던 데이터가 잘 나오는지 확인한다.</p>

<p><img src="\assets\built\images\apache-ignite\apache-ignite-overview\img7.png" alt="" /></p>

<p>메모리 DB로 사용되기 때문에, 서버가 기본설정 상 정지되면 기존의 값들이 사라질 것이다. 직접 확인해보기 위해 서버를 재시작한 뒤 데이터를 다시 조회해봤다.</p>

<p><img src="\assets\built\images\apache-ignite\apache-ignite-overview\img8.png" alt="" /></p>

<p>기존 데이터가 삭제되고 null로 출력되는 모습을 확인할 수 있다.</p>

<h1 id="데이터-영속성-설정">데이터 영속성 설정</h1>

<p>ignite는 서버가 중지되더라도 데이터가 소멸되지 않는 데이터 영속성 설정을 할 수 있다. 컴퓨터의 저장장치와 연계하여 데이터가 유지되는 것으로 보인다. 일단 기본적인 기능들을 먼저 사용해보기 위해 이론적인 내용보다 코드를 먼저 작성했기때문에 정확한 동작 매커니즘은 아직 파악하지 못하였다.</p>

<p>데이터 영속성을 설정하는 방법은 사이트의 가이드에 여러가지 방법이 소개되어 있는데, 본 포스트에서는 xml 파일을 수정하는 방법으로 진행하였다. 본 포스트 상단에 ignite 서버를 실행할 때 입력한 명령어를 보면 bat(또는 sh) 파일 뒤에 <strong>..\examples\config\example-ignite.xml</strong> 라고 입력한 부분이 있었는데, 이 xml 파일이 설정파일이다. 해당 폴더(examples\config)에 가보면 여러가지 설정들이 있는데, example-ignite.xml 파일을 그대로 수정하려고 한다.</p>

<p>example-ignite.xml 파일을 보면 example-default.xml 파일을 import 하고 있기 때문에 실제 수정은 <strong>example-default.xml</strong> 파일을 수정하였다.</p>

<p>example-default.xml 파일 안에 IgniteConfiguration bean(bean id가 ignite.cfg로 되어 있음) 내부에 아래 프로퍼티를 추가해준다.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"dataStorageConfiguration"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"org.apache.ignite.configuration.DataStorageConfiguration"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"defaultDataRegionConfiguration"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">"org.apache.ignite.configuration.DataRegionConfiguration"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"persistenceEnabled"</span> <span class="na">value=</span><span class="s">"true"</span><span class="nt">/&gt;</span>
            <span class="nt">&lt;/bean&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
    <span class="nt">&lt;/bean&gt;</span>
<span class="nt">&lt;/property&gt;</span>
</code></pre></div></div>

<p>persistenceEnabled 속성을 true로 설정해주면 데이터 영속성이 활성화된다. xml 파일을 수정하고 다시 ignite 서버를 실행시킨다. (본 포스트 상단 실행 명령어와 동일) 하지만 데이터 영속성을 활성화 한 뒤 클라이언트에서 조회 시도 시 아래와 같은 exception이 나타난다.</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">Exception in thread "main" class org.apache.ignite.IgniteException: Can not perform the operation because the cluster is inactive. Note, that the cluster is considered inactive by default if Ignite Persistent Store is used to let all the nodes join the cluster. To activate the cluster call Ignite.active(true).
</span></code></pre></div></div>

<p>데이터 영속성을 사용하려면 cluster 모드가 활성화되어야 하기 때문이다. cluster 모드를 활성화해주기 위해 또다른 cmd 창을 하나 더 실행시킨다.</p>

<blockquote>
  <p>ignite 서버가 실행되고 있는 상태에서 cluster 모드의 상태가 변경되기 때문에 서버를 실행중인 cmd는 그대로 두고 새로운 cmd에서 진행해야 한다.</p>
</blockquote>

<p>ignite.bat(또는 sh) 파일이 있는 폴더(bin 폴더)에 보면 control.bat(또는 sh) 파일이 있는데, 이 파일을 이용하면 cluster 모드를 활성화할 수 있다. 해당 폴더에서 아래 명령어를 입력해준다.</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">control.bat --set-state ACTIVE
</span></code></pre></div></div>

<p>아래와 같이 나오면 cluster 모드 활성화에 성공한 것이다.</p>

<p><img src="\assets\built\images\apache-ignite\apache-ignite-overview\img9.png" alt="" /></p>

<p>이제 영속성이 잘 동작하는지 확인하기 위해 클라이언트에서 값을 저장한 후 서버를 재시작하였다. 그 뒤 다시 클라이언트에서 데이터를 조회해보았다. (위 클라이언트 코드와 다를 것이 없으므로 코드는 생략)</p>

<p><img src="\assets\built\images\apache-ignite\apache-ignite-overview\img10.png" alt="" /></p>

<p>ignite 서버를 재시작했음에도 데이터가 유지되는 모습을 확인할 수 있었다.</p>

<p>여기까지 정말 기본적인 ignite 사용법을 살펴보았다.</p>]]></content><author><name>sian</name></author><category term="apache-ignite" /><category term="apache-ignite" /><category term="ignite" /><summary type="html"><![CDATA[아파치 재단에서 Apache Ignite라는 분산형 데이터베이스 서비스를 출시했다. 메모리와 저장장치 간 데이터를 분산하여 속도, 안정성 모두 고려하여 개발된 데이터베이스로 보인다. 사이트에 접속해보면 여러가지 기술들이 나열되어 있는데 이론적인 이야기는 일단 제쳐두고 간단하게 메모리 DB로 사용해 본 내용을 본 포스트에 기재한다.]]></summary></entry><entry><title type="html">Maven과 Gradle 차이</title><link href="https://sianlab.github.io/mavengradle" rel="alternate" type="text/html" title="Maven과 Gradle 차이" /><published>2021-09-09T16:00:00+09:00</published><updated>2021-09-09T16:00:00+09:00</updated><id>https://sianlab.github.io/mavengradle</id><content type="html" xml:base="https://sianlab.github.io/mavengradle"><![CDATA[<h1 id="빌드-도구란">빌드 도구란?</h1>

<ul>
  <li>빌드 도구는 빌드 자동화를 시켜주는 실행가능한 프로그램만들어 주는 프로그램 ex) maven, gradle, ant</li>
</ul>

<h2 id="빌드-자동화란">빌드 자동화란?</h2>
<ul>
  <li>
    <p>빌드 자동화의 본질적 목적은 소프트웨어 개발자가 반복해서 하는 코딩을 잘 짜여진 프로세스를 통해 자동으로 실행하여, 
믿을 수 있는 결과물도 생산해 낼 수 있는 일련의 작업방식 및 방법을 말한다.</p>
  </li>
  <li>
    <p>지속적인 통합(continuous Integration)과도 일맥상통되는 의미다. 
수없이 반복해서 최종 결과물을 만들어내야 하는 소프트웨어 개발업무에서 빠질 수 없는 개념적 이해가 되었다. 
특히 오늘날의 복잡하고 광범위한 협업적 개발 과정에서는 과정과정에서 있을 수 있는 인간적 실수의 가능성을 최소한으로 줄여야 한다.</p>
  </li>
</ul>

<p>출처 : Wikipedia</p>

<h2 id="maven-이란">Maven 이란?</h2>
<ul>
  <li>Project object model (POM)개념의 기반으로 만들어져있으며 빌드 중인 프로젝트, 빌드 순서, 
다양한 외부 라이브러리의 종속성 관계들을 pom.xml파일에 명시한다.</li>
  <li>외부저장소에서 필요한 라이브러리와 플러그인들을 다운로드 한 다음, 로컬시스템의 캐시에 모두 저장한다.</li>
</ul>

<h3 id="project-object-model-pom">Project Object Model (POM)</h3>
<p>Project Object Model는 이름 그대로 Project Object Model의 정보를 담고있는 파일이다. <br />
이 파일에서 주요하게 다루는 기능들은 다음과 같다.</p>
<ul>
  <li>프로젝트 정보 : 프로젝트의 이름, 개발자 목록, 라이센스 등</li>
  <li>빌드 설정 : 소스, 리소스, 라이프 사이클별 실행한 플러그인(goal)등 빌드와 관련된 설정</li>
  <li>빌드 환경 : 사용자 환경 별로 달라질 수 있는 프로파일 정보</li>
  <li>POM연관 정보 : 의존 프로젝트(모듈), 상위 프로젝트, 포함하고 있는 하위 모듈 등</li>
</ul>

<h2 id="gradle-이란">Gradle 이란?</h2>
<ul>
  <li>Maven과 Ant에서 볼수 있는 개념들을 사용하는 대안으로써 나온 프로젝트 빌드 관리 툴이다.</li>
  <li>Ant처럼 유연한 범용 빌드 도구</li>
  <li>Maven을 사용할 수 있는 변환 가능 컨벤션 프레임 워크</li>
  <li>Groovy 언어를 사용한 Domain-specific-language를 사용한다. 
(설정파일을 xml파일을 사용하는 Maven보다 코드가 훨씬 간결하다.)</li>
  <li>2007년에 처음 개발되었고, 2013년에 구글에 의해 안드로이드 프로젝트의 빌드 시스템으로 채택되었다.</li>
</ul>

<h2 id="maven-gradle-차이">Maven Gradle 차이</h2>
<ol>
  <li>Maven은 고정적이고 선형적인 단계의 모델을 기반<br />
Gradle은 작업 의존성 그래프를 기반</li>
  <li>Maven, Gradle 둘 다 다중 모듈 빌드를 병렬로 실행할 수 있지만<br />
Gradle은 어떤 task가 업데이트 되었고 안되었는지를 체크하기 때문에 incremental build를 허용한다.<br />
이미 업데이트된 task에 대해서는 작업이 실행 되지 않으므로 빌드 시간이 훨씬 단축된다.</li>
  <li>Maven은 멀티 프로젝트에서 특정 설정을 다른 모듈에서 사용하려면 상속을 받아야하지<br />
Gradle은 설정 주입 방식을 제공한다.</li>
  <li>Gradle은 concurrent에 안전한 캐시를 허용한다.<br />
2개 이상의 프로젝트에서 동일한 캐시를 사용할 경우,   <br />
서로 overwrite되지 않도록 checksum기반의 캐시를 사용하고 캐시를 repository와 동기화시킬 수 있다.</li>
</ol>

<h2 id="maven-코드-예제">Maven 코드 예제</h2>
<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">"http://maven.apache.org/POM/4.0.0"</span> <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
<span class="na">xsi:schemaLocation=</span><span class="s">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span class="nt">&gt;</span>
<span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>

    <span class="nt">&lt;groupId&gt;</span>com.example<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>demo-maven<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;version&gt;</span>0.0.1-SNAPSHOT<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;packaging&gt;</span>jar<span class="nt">&lt;/packaging&gt;</span>

    <span class="nt">&lt;name&gt;</span>demo-maven<span class="nt">&lt;/name&gt;</span>
    <span class="nt">&lt;description&gt;</span>Demo project for Spring Boot<span class="nt">&lt;/description&gt;</span>

    <span class="nt">&lt;parent&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-parent<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;version&gt;</span>1.5.4.RELEASE<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;relativePath/&gt;</span> <span class="c">&lt;!-- lookup parent from repository --&gt;</span>
    <span class="nt">&lt;/parent&gt;</span>

    <span class="nt">&lt;properties&gt;</span>
        <span class="nt">&lt;project.build.sourceEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.build.sourceEncoding&gt;</span>
        <span class="nt">&lt;project.reporting.outputEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.reporting.outputEncoding&gt;</span>
        <span class="nt">&lt;java.version&gt;</span>1.8<span class="nt">&lt;/java.version&gt;</span>
    <span class="nt">&lt;/properties&gt;</span>
    
    <span class="nt">&lt;dependencies&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
    
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-test<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;scope&gt;</span>test<span class="nt">&lt;/scope&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;/dependencies&gt;</span>

    <span class="nt">&lt;build&gt;</span>
        <span class="nt">&lt;plugins&gt;</span>
            <span class="nt">&lt;plugin&gt;</span>
                <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
                <span class="nt">&lt;artifactId&gt;</span>spring-boot-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;/plugin&gt;</span>
        <span class="nt">&lt;/plugins&gt;</span>
    <span class="nt">&lt;/build&gt;</span>
<span class="nt">&lt;/project&gt;</span>
</code></pre></div></div>

<h2 id="gradle-코드-예제">Gradle 코드 예제</h2>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">buildscript</span> <span class="p">{</span>
    <span class="nx">ext</span> <span class="p">{</span>
        <span class="nx">springBootVersion</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">1.5.4.RELEASE</span><span class="dl">'</span>
    <span class="p">}</span>
    
    <span class="nx">repositories</span> <span class="p">{</span>
        <span class="nx">m</span>  <span class="nx">avenCentral</span><span class="p">()</span>
    <span class="p">}</span>
    <span class="nx">dependencies</span> <span class="p">{</span>
        <span class="nx">classpath</span><span class="p">(</span><span class="dl">"</span><span class="s2">org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}</span><span class="dl">"</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nx">apply</span> <span class="nx">plugin</span><span class="p">:</span> <span class="dl">'</span><span class="s1">java</span><span class="dl">'</span>
<span class="nx">apply</span> <span class="nx">plugin</span><span class="p">:</span> <span class="dl">'</span><span class="s1">idea</span><span class="dl">'</span>
<span class="nx">apply</span> <span class="nx">plugin</span><span class="p">:</span> <span class="dl">'</span><span class="s1">org.springframework.boot</span><span class="dl">'</span>

<span class="nx">version</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">0.0.1-SNAPSHOT</span><span class="dl">'</span>
<span class="nx">sourceCompatibility</span> <span class="o">=</span> <span class="mf">1.8</span>

<span class="nx">repositories</span> <span class="p">{</span>
    <span class="nx">mavenCentral</span><span class="p">()</span>
<span class="p">}</span>


<span class="nx">dependencies</span> <span class="p">{</span>
    <span class="nx">compile</span><span class="p">(</span><span class="dl">'</span><span class="s1">org.springframework.boot:spring-boot-starter</span><span class="dl">'</span><span class="p">)</span>
    <span class="nx">testCompile</span><span class="p">(</span><span class="dl">'</span><span class="s1">org.springframework.boot:spring-boot-starter-test</span><span class="dl">'</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>sian</name></author><category term="build" /><category term="maven" /><category term="gradle" /><summary type="html"><![CDATA[빌드 도구란?]]></summary></entry><entry><title type="html">Python 강좌(1) - Python 기본</title><link href="https://sianlab.github.io/python-base" rel="alternate" type="text/html" title="Python 강좌(1) - Python 기본" /><published>2021-09-08T08:40:00+09:00</published><updated>2021-09-08T08:40:00+09:00</updated><id>https://sianlab.github.io/python-base</id><content type="html" xml:base="https://sianlab.github.io/python-base"><![CDATA[<p><span class="table-of-contents-list">Python 강좌는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./python-base">Python 강좌(1) - Python 기본</a></li>
    <li><a href="./python-control-statement">Python 강좌(2) - Python 제어문</a></li>
</ul>

<p>이 글은 python base 입니다.!!</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">syntaxHighlight</span><span class="p">(</span><span class="nx">code</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">foo</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Hello World</span><span class="dl">'</span><span class="p">;</span>
    <span class="kd">var</span> <span class="nx">bar</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>sian</name></author><category term="python" /><summary type="html"><![CDATA[Python 강좌는 여러 절로 구성되어 있습니다. Python 강좌(1) - Python 기본 Python 강좌(2) - Python 제어문]]></summary></entry><entry><title type="html">Python 강좌(2) - Python 제어문</title><link href="https://sianlab.github.io/python-control-statement" rel="alternate" type="text/html" title="Python 강좌(2) - Python 제어문" /><published>2021-09-08T08:40:00+09:00</published><updated>2021-09-08T08:40:00+09:00</updated><id>https://sianlab.github.io/python-control-statement</id><content type="html" xml:base="https://sianlab.github.io/python-control-statement"><![CDATA[<p><span class="table-of-contents-list">Python 강좌는 여러 절로 구성되어 있습니다. </span></p>
<ul class="table-of-contents-list">
    <li><a href="./python-base">Python 강좌(1) - Python 기본</a></li>
    <li><a href="./python-control-statement">Python 강좌(2) - Python 제어문</a></li>
</ul>

<p>이 글은 Python 제어문 입니다.!!</p>]]></content><author><name>sian</name></author><category term="python" /><summary type="html"><![CDATA[Python 강좌는 여러 절로 구성되어 있습니다. Python 강좌(1) - Python 기본 Python 강좌(2) - Python 제어문]]></summary></entry><entry><title type="html">PMD 설치 및 사용방법</title><link href="https://sianlab.github.io/pmd" rel="alternate" type="text/html" title="PMD 설치 및 사용방법" /><published>2021-01-20T16:30:00+09:00</published><updated>2021-01-20T16:30:00+09:00</updated><id>https://sianlab.github.io/pmd</id><content type="html" xml:base="https://sianlab.github.io/pmd"><![CDATA[<h1 id="-pmd-란">※	PMD 란</h1>

<ol>
  <li>JAVA 소스 코드를 분석하여 프로그램의 오류 또는 불필요한 부분을 찾아내고 성능을 높이는 오픈 소스 도구</li>
  <li>PMD는 미사용 변수, 비어있는 코드 블락, 불필요한 오브젝트 생성과 같은 결함을 유발할 수 있는 코드를 검사한다.</li>
  <li>자바 코드를 검사해서 나쁜 코딩을 잡아주고 그에 대한 설명을 지원하며, Eclipse, Jbuider 등에 연동하여 사용한다.</li>
</ol>

<h2 id="-pmd-설치방법">※ PMD 설치방법</h2>

<p><img src="\assets\built\images\pmd\pmd01.png" alt="img" /></p>
<ul>
  <li>이클립스와 연동을 위해 Help → Install New Software 클릭한다</li>
</ul>

<p><img src="\assets\built\images\pmd\pmd02.png" alt="img" /></p>
<ul>
  <li>Name을 입력하고 다운로드 주소를 입력한다</li>
  <li><a href="주소 : http://sourceforge.net/projects/pmd/files/pmd-eclipse/update-site">http://sourceforge.net/projects/pmd/files/pmd-eclipse/update-site</a></li>
</ul>

<p><img src="\assets\built\images\pmd\pmd03.png" alt="img" /></p>
<ul>
  <li>다운로드 시작</li>
</ul>

<p><img src="\assets\built\images\pmd\pmd04.png" alt="img" /></p>
<ul>
  <li>다운로드 완료</li>
</ul>

<p><img src="\assets\built\images\pmd\pmd05.png" alt="img" /></p>
<ul>
  <li>항목 선택 후 설치 시작</li>
</ul>

<p><img src="\assets\built\images\pmd\pmd06.png" alt="img" /></p>
<ul>
  <li>라이선스 동의 후 완료</li>
</ul>

<h3 id="-pmd-사용방법">※ PMD 사용방법</h3>

<p><img src="\assets\built\images\pmd\pmd07.png" alt="img" /></p>
<ul>
  <li>코드 검사할 파일 우클릭 → PMD → Check code</li>
</ul>

<p><img src="\assets\built\images\pmd\pmd08.png" alt="img" /></p>
<ul>
  <li>코드 검사 완료</li>
</ul>

<p><img src="\assets\built\images\pmd\pmd09.png" alt="img" /></p>
<ul>
  <li>항목 우클릭 → show details</li>
</ul>

<p><img src="\assets\built\images\pmd\pmd10.png" alt="img" /></p>
<ul>
  <li>불량 코드로 지적된 사항 확인</li>
</ul>

<h4 id="-pmd-룰셋">※ PMD 룰셋</h4>

<p>• PMD 룰셋이란
전자정부 표준프레임워크에서는 Code Inspection 을 위한 룰셋으로 논리오류/구문오류/참조오류 영역을 대상으로 하는 총 39개의 룰을 표준으로 선정하였다</p>

<p>• 룰셋 환경설정
Eclipse IDE의 환경설정을 통해, 전자정부 표준프레임워크 표준 Inspection 룰셋을 PMD Plugin에 적용할 수 있으며, 다음과 같은 순서로 수행한다.</p>

<ul>
  <li>전자정부 표준프레임워크 표준 Inspection 룰셋
  PMD를 이용한 Code Inspection 시 기준이 되는 요소는 룰이며, 전자정부 표준프레임워크에서는 PMD가 제공하는 수 많은 룰 중에 기본이 될 만한 것들을 간추려 전자정부 표준프레임워크 표준 Inspection 룰셋이라는 이름으로 구성하였다. 이는 39개의 룰들로 구성되며, 개별 룰에 대한 상세 설명은 다음을 참조하라</li>
</ul>

<p>⊙ <a href="⊙ 전자정부 표준 inspection 룰셋">https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:dev2:imp:inspection:usetool#%EC%A0%84%EC%9E%90%EC%A0%95%EB%B6%80<em>%ED%91%9C%EC%A4%80_inspection</em>%EB%A3%B0%EC%85%8B</a></p>

<ul>
  <li>다음 두가지 경로 중, 하나를 선택해어 전자정부 표준프레임워크 표준 Inspection 룰셋을 다운
  표준 Inspection 룰셋 한글/영문판의 압축파일 : 개발환경 3.5 이상 버전 사용
  전자정부 표준프레임워크 온라인 지원 포탈사이트의 다운로드 &gt; 개발환경 &gt; 구현도구 소스코드에서 내려받기</li>
</ul>

<ol>
  <li>
    <p>내려받은 파일을 임의의 디렉터리에 압축 해제</p>
  </li>
  <li>
    <p>Eclipse IDE의 메뉴에서 Window → Preferences 선택
  <img src="\assets\built\images\pmd\pmd11.png" alt="img" /></p>
  </li>
  <li>
    <p>Preferences 창의 왼쪽 메뉴 구조에서, PMD → Rules Configuration 선택
  <img src="\assets\built\images\pmd\pmd12.png" alt="img" /></p>
  </li>
  <li>
    <p>Preferences 창에서, use global rule management 선택 후 ruleset 목록 전체선택후 우측의 [x] Remove rules 아이콘 클릭
  <img src="\assets\built\images\pmd\pmd13.png" alt="img" /></p>
  </li>
  <li>
    <p>Preferences 창에서, 우측의 Import ruleset 아이콘 클릭
  <img src="\assets\built\images\pmd\pmd14.png" alt="img" /></p>
  </li>
  <li>
    <p>Ruleset 가져오기 팝업창에서, 우측의 Browse…버튼 클릭한후 앞서 압축해제한 룰셋 파일 중 한글판인 EgovInspectionRules_kor-3.5.xml 파일을 선택
  <img src="\assets\built\images\pmd\pmd15.png" alt="img" /></p>
  </li>
  <li>
    <p>Ruleset 가져오기 팝업창에서, ruleset목록이 확인되면 OK버튼을 클릭
  <img src="\assets\built\images\pmd\pmd16.png" alt="img" /></p>
  </li>
  <li>
    <p>Perferences 창에서, 목록 좌측의 체크박스를 모두 선택하고 OK버튼을 클릭
  <img src="\assets\built\images\pmd\pmd17.png" alt="img" /></p>
  </li>
  <li>
    <p>룰셋을 적용하겠냐는 질문에 YES버튼을 클릭하여 최종 확인.</p>
  </li>
</ol>]]></content><author><name>sian</name></author><category term="web" /><category term="PMD" /><summary type="html"><![CDATA[※ PMD 란]]></summary></entry><entry><title type="html">TortoiseGit 사용방법</title><link href="https://sianlab.github.io/tortoisegit-2" rel="alternate" type="text/html" title="TortoiseGit 사용방법" /><published>2021-01-13T15:30:00+09:00</published><updated>2021-01-13T15:30:00+09:00</updated><id>https://sianlab.github.io/tortoisegit-2</id><content type="html" xml:base="https://sianlab.github.io/tortoisegit-2"><![CDATA[<h1 id="-tortoisegit-사용방법">※	TortoiseGit 사용방법</h1>

<ol>
  <li>데이터 받아오기 (Git 데이터 복제)</li>
</ol>

<p><img src="\assets\built\images\tortoisegit\tortoise25.png" alt="img" /></p>

<p>Git 자료를 복제 받기 원하는 곳으로 이동한 후 마우스 우클릭 “Git 복제하기..” 클릭</p>

<p><img src="\assets\built\images\tortoisegit\tortoise26.png" alt="img" /></p>

<p>새로 생긴 복제창에서 “URL” 부분에 복제할 자료의 Repository 주소를 입력한다</p>

<p><img src="\assets\built\images\tortoisegit\tortoise27.png" alt="img" /></p>

<p>권한을 가진 Git 사용자 정보를 입력한다</p>

<p><img src="\assets\built\images\tortoisegit\tortoise28.png" alt="img" /></p>

<p>Git 데이터 복제</p>

<p><img src="\assets\built\images\tortoisegit\tortoise29.png" alt="img" /></p>

<p>Git 데이터 복제 완료</p>

<ol>
  <li>데이터 업데이트 (Git 데이터 동기화)</li>
</ol>

<p><img src="\assets\built\images\tortoisegit\tortoise30.png" alt="img" /></p>

<p>데이터 복제된 폴더에서 우클릭 “Git 동기화..” 클릭</p>

<p><img src="\assets\built\images\tortoisegit\tortoise31.png" alt="img" /></p>

<p>“가져와 병합하기” 클릭</p>

<p><img src="\assets\built\images\tortoisegit\tortoise32.png" alt="img" /></p>

<p>업데이트 된 내역이 출력됨. 다시 “가져와 병합하기” 클릭</p>

<p><img src="\assets\built\images\tortoisegit\tortoise33.png" alt="img" /></p>

<p>데이터가 업데이트 되고 변경된 내역이 출력됨</p>

<ol>
  <li>데이터 저장 (Git 작업 Commit)</li>
</ol>

<p><img src="\assets\built\images\tortoisegit\tortoise34.png" alt="img" /></p>

<p>수정한 파일이 위치한 폴더에서 우클릭 “Git 커밋 -&gt; master” 클릭</p>

<p><img src="\assets\built\images\tortoisegit\tortoise35.png" alt="img" /></p>

<p>작업 후엔 항상 “Commit” 을 해야한다.
메시지 부분에 자신이 작업한 내용을 간략히 기입한다
하단의 파일 리스트에서 자신이 작업한 파일들을 선택하고 커밋을 누른다</p>

<p><img src="\assets\built\images\tortoisegit\tortoise36.png" alt="img" /></p>

<p>커밋 완료. 위 상태에서는 본인 PC에만 저장되고, 서버에는 올라가지 않은 상태이다</p>

<p><img src="\assets\built\images\tortoisegit\tortoise37.png" alt="img" /></p>

<p>작업한 폴더에서 우클릭 “TortoiseGit → Git Push” 선택</p>

<p><img src="\assets\built\images\tortoisegit\tortoise38.png" alt="img" /></p>

<p>로컬, 원격 모두 master 인지 확인 후 확인버튼 선택</p>

<p><img src="\assets\built\images\tortoisegit\tortoise39.png" alt="img" /></p>

<p>서버에 작업내용 “Push” 완료</p>]]></content><author><name>sian</name></author><category term="web" /><category term="TortoiseGit" /><summary type="html"><![CDATA[※ TortoiseGit 사용방법]]></summary></entry><entry><title type="html">TortoiseGit 설치방법</title><link href="https://sianlab.github.io/tortoisegit-1" rel="alternate" type="text/html" title="TortoiseGit 설치방법" /><published>2021-01-13T15:00:00+09:00</published><updated>2021-01-13T15:00:00+09:00</updated><id>https://sianlab.github.io/tortoisegit-1</id><content type="html" xml:base="https://sianlab.github.io/tortoisegit-1"><![CDATA[<h1 id="-tortoisegit-설치방법">※	TortoiseGit 설치방법</h1>

<h2 id="-tortoisegit-이란">●	TortoiseGit 이란</h2>

<p>윈도우에서 GUI환경을 이용해서 Git을 제어할 수 있도록 도와주는 버전관리 시스템이다
때문에 Git은 먼저 설치되어 있어야 한다</p>

<p> </p>
<h2 id="-git-설치방법">●	Git 설치방법</h2>

<p>⊙ Git SCM에 접속하여 설치 파일 다운로드</p>

<p><img src="\assets\built\images\tortoisegit\tortoise01.png" alt="img" /></p>

<p><a href="주소 : https://git-scm.com/">https://git-scm.com/</a></p>

<p><img src="\assets\built\images\tortoisegit\tortoise02.png" alt="img" /></p>

<p><img src="\assets\built\images\tortoisegit\tortoise03.png" alt="img" /></p>

<p><img src="\assets\built\images\tortoisegit\tortoise04.png" alt="img" /></p>

<p><img src="\assets\built\images\tortoisegit\tortoise05.png" alt="img" /></p>

<p>Git을 사용할 기본 에디터 선택 (기본설정 Vim)</p>

<p><img src="\assets\built\images\tortoisegit\tortoise06.png" alt="img" /></p>

<p><img src="\assets\built\images\tortoisegit\tortoise07.png" alt="img" /></p>

<p>https 전송 인증서 선택 – 기본설정으로 Next</p>

<p><img src="\assets\built\images\tortoisegit\tortoise08.png" alt="img" /></p>

<p><img src="\assets\built\images\tortoisegit\tortoise09.png" alt="img" /></p>

<p>OpenSSL 라이브러리 사용 – 기본설정으로 Next</p>

<p><img src="\assets\built\images\tortoisegit\tortoise10.png" alt="img" /></p>

<p>Git Bash 터미널 에뮬레이터 설정
Use MinTTY(the default terminal of MSYS2) – Git bash 기본 터미널 사용</p>

<p><img src="\assets\built\images\tortoisegit\tortoise11.png" alt="img" /></p>

<p><img src="\assets\built\images\tortoisegit\tortoise12.png" alt="img" /></p>

<p>기본설정으로 Next</p>

<p><img src="\assets\built\images\tortoisegit\tortoise13.png" alt="img" /></p>

<p><img src="\assets\built\images\tortoisegit\tortoise14.png" alt="img" /></p>

<p>Enable file system caching – 빠른 실행을 위해 데이터를 메모리에 캐시
설정이 완료되면 인스톨</p>

<p><img src="\assets\built\images\tortoisegit\tortoise15.png" alt="img" /></p>

<p>Launch Git Bash에 체크하고 Finish 하면 Git Bash가 실행된다
특정 폴더에서 우클릭시에도 Git Bash를 실행할 수 있다</p>

<h2 id="-tortoisegit-설치방법-1">●	TortoiseGit 설치방법</h2>

<ol>
  <li>TortoiseGit 다운로드</li>
</ol>

<p>Windows 환경에 맞는 설치 파일을 다운로드
<a href="다운로드 : https://tortoisegit.org/download/">https://tortoisegit.org/download/</a></p>

<p><img src="\assets\built\images\tortoisegit\tortoise16.png" alt="img" /></p>

<ol>
  <li>설치</li>
</ol>

<p><img src="\assets\built\images\tortoisegit\tortoise17.png" alt="img" /></p>

<p><img src="\assets\built\images\tortoisegit\tortoise18.png" alt="img" /></p>

<p>Tortoise에서 제공하는 기본 PuTTY 기반의 SSH를 선택</p>

<p><img src="\assets\built\images\tortoisegit\tortoise19.png" alt="img" /></p>

<p><img src="\assets\built\images\tortoisegit\tortoise20.png" alt="img" /></p>

<p>설치 준비가 완료되면 Install 진행</p>

<p><img src="\assets\built\images\tortoisegit\tortoise21.png" alt="img" /></p>

<p>첫번째 언어선택 화면에서 사용 언어를 선택
추가할 언어팩은 아래 주소에서 추가할 수 있다
다운로드 : https://tortoisegit.org/download/</p>

<p><img src="\assets\built\images\tortoisegit\tortoise22.png" alt="img" /></p>

<p>Git의 실행파일 위치를 입력해야 한다. Git을 먼저 설치하였다면 자동으로 등록된다</p>

<p><img src="\assets\built\images\tortoisegit\tortoise23.png" alt="img" /></p>

<p>유저 정보 입력</p>

<p><img src="\assets\built\images\tortoisegit\tortoise24.png" alt="img" /></p>

<p>설치 완료</p>]]></content><author><name>sian</name></author><category term="web" /><category term="TortoiseGit" /><summary type="html"><![CDATA[※ TortoiseGit 설치방법]]></summary></entry><entry><title type="html">CentOS 7 Gitlab 설치 및 설정(2) - Gitlab 설정</title><link href="https://sianlab.github.io/gitlab-install-2" rel="alternate" type="text/html" title="CentOS 7 Gitlab 설치 및 설정(2) - Gitlab 설정" /><published>2021-01-13T14:45:00+09:00</published><updated>2021-01-13T14:45:00+09:00</updated><id>https://sianlab.github.io/gitlab-install-2</id><content type="html" xml:base="https://sianlab.github.io/gitlab-install-2"><![CDATA[<h3 id="centos-7-gitlab-설치-및-설정2---gitlab-설정">CentOS 7 Gitlab 설치 및 설정(2) - Gitlab 설정</h3>

<h6 id="os--centos-7">OS : CentOS 7</h6>
<h6 id="version--gitlab-ce-community-edition---무료버전">VERSION : gitlab-ce (community edition - 무료버전)</h6>

<h6 id="centos-7-gitlab-설치-및-설정1---gitlab-설치하기"><a href="https://sianlab.github.io/linux/gitlab-install-1">CentOS 7 Gitlab 설치 및 설정(1) - Gitlab 설치하기</a></h6>

<h4 id="1-external-url-설정-변경">1. External url 설정 변경</h4>

<h6 id="설정-파일-위치--etcgitlabgitlabrb">설정 파일 위치 : /etc/gitlab/gitlab.rb</h6>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>vim /etc/gitlab/gitlab.rb
</code></pre></div></div>

<h6 id="-설정-파일-내에서-external_url-부분을-찾아서-원하는-url-로-변경">: 설정 파일 내에서 external_url 부분을 찾아서 원하는 url 로 변경</h6>

<p><img src="\assets\built\images\gitlab\2\image-20210113154112679.png" alt="image-20210113154112679" /></p>

<h4 id="2-저장소-데이터-저장-위치-변경">2. 저장소 데이터 저장 위치 변경</h4>

<h6 id="설정-파일-위치--etcgitlabgitlabrb-1">설정 파일 위치 : /etc/gitlab/gitlab.rb</h6>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>vim /etc/gitlab/gitlab.rb
</code></pre></div></div>

<h6 id="-설정-파일-내에서-git_data_dirs-경로-변경">: 설정 파일 내에서 git_data_dirs 경로 변경</h6>

<p><img src="\assets\built\images\gitlab\2\image-20210113154201441.png" alt="image-20210113154201441" /></p>

<h4 id="3-smtp-설정">3. SMTP 설정</h4>

<h6 id="설정-파일-위치--etcgitlabgitlabrb-2">설정 파일 위치 : /etc/gitlab/gitlab.rb</h6>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>vim /etc/gitlab/gitlab.rb
</code></pre></div></div>

<h6 id="-smtp-를-이용한-메일링-서비스-이용을-할-경우-파일-내의-smtp-설정-부분-변경">: SMTP 를 이용한 메일링 서비스 이용을 할 경우 파일 내의 SMTP 설정 부분 변경</h6>

<p><img src="\assets\built\images\gitlab\2\image-20210113154428321.png" alt="image-20210113154428321" /></p>

<p>※Gitlab SMTP 설정 관련 공식 문서 : <a href="https://docs.gitlab.com/omnibus/settings/smtp.html">Gitlab SMTP 설정 관련 Docs</a></p>

<h4 id="4-gitlab-변경된-설정-적용하기">4. Gitlab 변경된 설정 적용하기</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>gitlab-ctl stop				// gitlab 중지
<span class="nb">sudo </span>gitlab-ctl reconfigure			// 설정 적용
<span class="nb">sudo </span>gitlab-ctl restart				// gitlab 재시작
</code></pre></div></div>]]></content><author><name>sian</name></author><category term="linux" /><category term="gitlab" /><summary type="html"><![CDATA[CentOS 7 Gitlab 설치 및 설정(2) - Gitlab 설정]]></summary></entry><entry><title type="html">CentOS 7 Gitlab 설치 및 설정(1) - Gitlab 설치하기</title><link href="https://sianlab.github.io/gitlab-install-1" rel="alternate" type="text/html" title="CentOS 7 Gitlab 설치 및 설정(1) - Gitlab 설치하기" /><published>2021-01-13T12:45:00+09:00</published><updated>2021-01-13T12:45:00+09:00</updated><id>https://sianlab.github.io/gitlab-install-1</id><content type="html" xml:base="https://sianlab.github.io/gitlab-install-1"><![CDATA[<h3 id="centos-7-gitlab-설치-및-설정1---gitlab-설치하기">CentOS 7 Gitlab 설치 및 설정(1) - Gitlab 설치하기</h3>

<h6 id="os--centos-7">OS : CentOS 7</h6>
<h6 id="version--gitlab-ce-community-edition---무료버전">VERSION : gitlab-ce (community edition - 무료버전)</h6>

<h4 id="1-gitlab-설치시-필요한-패키지-설치">1. Gitlab 설치시 필요한 패키지 설치</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>yum <span class="nb">install</span> <span class="nt">-y</span> curl policycoreutils-python openssh-server
<span class="nb">sudo </span>systemctl <span class="nb">enable </span>sshd
<span class="nb">sudo </span>systemctl start sshd
<span class="nb">sudo </span>firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-service</span><span class="o">=</span>http
<span class="nb">sudo </span>firewall-cmd <span class="nt">--permanent</span> <span class="nt">--add-service</span><span class="o">=</span>https
<span class="nb">sudo </span>systemctl reload firewalld
</code></pre></div></div>

<h4 id="2-설치-전후-의존성-패키지-설치여부-확인">2. 설치 전/후 의존성 패키지 설치여부 확인</h4>

<h6 id="1-policycoreutils-python">1. policycoreutils-python</h6>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum list installed | <span class="nb">grep </span>policycoreutils-python
</code></pre></div></div>

<p><img src="\assets\built\images\gitlab\1\image-20210113144623259.png" alt="image-20210113144623259" /></p>

<h6 id="2-openssh-server">2. openssh-server</h6>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum list installed | <span class="nb">grep </span>openssh-server
</code></pre></div></div>

<p><img src="\assets\built\images\gitlab\1\image-20210113144640124.png" alt="image-20210113144640124" /></p>

<h6 id="3--openssh-server-구동-여부-확인">3.  openssh-server 구동 여부 확인</h6>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl status sshd
</code></pre></div></div>

<p><img src="\assets\built\images\gitlab\1\image-20210113144737316.png" alt="image-20210113144737316" /></p>

<h6 id="4-메일링-서비스를-위한-postfix-설치필요시">4. 메일링 서비스를 위한 postfix 설치(필요시)</h6>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>yum <span class="nb">install </span>postfix
<span class="nb">sudo </span>systemctl <span class="nb">enable </span>postfix
<span class="nb">sudo </span>systemctl start postfix
</code></pre></div></div>

<h4 id="3-gitlab-설치하기">3. Gitlab 설치하기</h4>

<h6 id="1-gitlab-ce-package-repository-추가">1. Gitlab-ce Package repository 추가</h6>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | <span class="nb">sudo </span>bash
</code></pre></div></div>

<h6 id="2-gitlab-을-접속하기-위한-url-설정-후-gitlab-ce-설치">2. Gitlab 을 접속하기 위한 url 설정 후 gitlab-ce 설치</h6>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="nb">sudo </span><span class="nv">EXTERNAL_URL</span><span class="o">=</span><span class="s2">"자신의 도메인이나 접속가능한 IP:접속할 Port번호"</span> yum <span class="nb">install</span> <span class="nt">-y</span> gitlab-ce
   ex<span class="o">)</span> <span class="nb">sudo </span><span class="nv">EXTERNAL_URL</span><span class="o">=</span><span class="s2">"https://localhost:8080"</span> yum <span class="nb">install</span> <span class="nt">-y</span> gitlab-ce
</code></pre></div></div>

<h6 id="3-설치-완료후-external_url-에-설정된-주소로-접속-후-gitlab-페이지-확인">3. 설치 완료후 EXTERNAL_URL 에 설정된 주소로 접속 후 Gitlab 페이지 확인</h6>

<h6 id="4-초기-페이지-에서-root-의-패스워드를-새로-지정하기-위한-페이지가-나온다">4. 초기 페이지 에서 root 의 패스워드를 새로 지정하기 위한 페이지가 나온다.</h6>

<h4 id="3-gitlab-명령어">3. Gitlab 명령어</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>gitlab-ctl stop				// gitlab 중지
<span class="nb">sudo </span>gitlab-ctl reconfigure			// 설정 적용
<span class="nb">sudo </span>gitlab-ctl restart				// gitlab 재시작
</code></pre></div></div>]]></content><author><name>sian</name></author><category term="linux" /><category term="gitlab" /><summary type="html"><![CDATA[CentOS 7 Gitlab 설치 및 설정(1) - Gitlab 설치하기]]></summary></entry><entry><title type="html">워드프레스(wordpress) 설치형 사용법</title><link href="https://sianlab.github.io/wordpress-use-installer" rel="alternate" type="text/html" title="워드프레스(wordpress) 설치형 사용법" /><published>2020-07-14T18:45:00+09:00</published><updated>2020-07-14T18:45:00+09:00</updated><id>https://sianlab.github.io/wordpress-use-installer</id><content type="html" xml:base="https://sianlab.github.io/wordpress-use-installer"><![CDATA[<h1 id="워드프레스-설치형-사용법">워드프레스 설치형 사용법</h1>

<h2 id="wordpress-설치형-사용법">WordPress 설치형 사용법</h2>
<p> 
설치형 워드프레스를 쉽게 사용하기위한 플랫폼들이 많은데</p>

<p>• <a href="http://www.wampserver.com/en/">WAMP</a></p>

<p>• <a href="http://www.mamp.info/en/index.html">MAMP</a></p>

<p>• <a href="http://bitnami.org/stack/lampstack">LAMP</a></p>

<p>• <a href="http://www.apachefriends.org/en/xampp.html">XAMPP</a></p>

<p>전부 한국어를 지원하지 않으므로, 국내 개발된 autoset을 활용한 워드프레스 사용법입니다.</p>

<p>• <a href="http://autoset.net/xe/download_autoset_10_7_2">AutoSet</a></p>

<p><img src="\assets\built\images\wordpress\b1.png" alt="img" /></p>

<p>운영체제 시스템에 따라 알맞게 다운로드 합니다.</p>

<p>다른 아파치서버나 mysql 서버와 충돌이 날 수 있으므로 종료 후 설치를 진행합니다.</p>

<p><img src="\assets\built\images\wordpress\b2.png" alt="img" /></p>

<p><img src="\assets\built\images\wordpress\b3.png" alt="img" /></p>

<p><img src="\assets\built\images\wordpress\b4.png" alt="img" /></p>

<p><img src="\assets\built\images\wordpress\b5.png" alt="img" /></p>

<p>설치가 완료 된 후 오토셋을 실행시 다음과 같은 화면이 나옵니다.</p>

<p><img src="\assets\built\images\wordpress\b6.png" alt="img" /></p>

<p>기본으로는 웹 서버와 mysql 시작이라고 나올것인데 시작해주시면 됩니다.</p>

<p>그후 제어탭을 눌러 phpMyAdmin에 접속합니다.</p>

<p><img src="\assets\built\images\wordpress\b7.png" alt="img" /></p>

<p>초기화면에서 기본값으로 로그인 할 경우</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>//기본값
사용자명 : root
패스워드 : autoset 
</code></pre></div></div>

<p><img src="\assets\built\images\wordpress\b8.png" alt="img" /></p>

<p>다음과 같은 화면이 나오는데,</p>

<p>해당화면에서 데이터베이스에 들어가 wordpress에서 사용될 DB를 생성합니다.</p>

<p><img src="\assets\built\images\wordpress\b9.png" alt="img" /></p>

<p>그리고 워드프레스 최신버전을 설치해줍니다.</p>

<p><a href="https://ko.wordpress.org/download/">워드프레스 다운로드</a></p>

<p><img src="\assets\built\images\wordpress\b10.png" alt="img" /></p>

<p>압축파일을 오토셋의 public_html 폴더에 해제해줍니다.</p>

<p><img src="\assets\built\images\wordpress\b11.png" alt="img" /></p>

<p>그 후 localhost/wordpress 에 접속하여 워드프레스 환경설정을 해줍니다.</p>

<p><img src="\assets\built\images\wordpress\b12.png" alt="img" /></p>

<p><img src="\assets\built\images\wordpress\b13.png" alt="img" /></p>

<p><img src="\assets\built\images\wordpress\b14.png" alt="img" /></p>

<p>또한 설치형은 플러그인을 무료로 사용 가능합니다.</p>

<p><img src="\assets\built\images\wordpress\b15.png" alt="img" /></p>

<p><img src="\assets\built\images\wordpress\b16.png" alt="img" /></p>

<p><img src="\assets\built\images\wordpress\b17.png" alt="img" /></p>

<p>이러한 식으로 플러그인을 찾아 추가해 사용 할 수 있습니다.</p>]]></content><author><name>sian</name></author><category term="web" /><category term="WordPress" /><summary type="html"><![CDATA[워드프레스 설치형 사용법]]></summary></entry></feed>